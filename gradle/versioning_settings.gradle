ext.useSpecificVersion = Boolean.valueOf(
    System.getProperty('build.useSpecificVersion')
        ?: System.getenv('BUILD__USE_SPECIFIC_VERSION')
        ?: Boolean.TRUE.toString())

/**
 * 返回当前版本
 * @param specificVersion 指定版本，如果存在则直接使用
 * @return
 */
ext.getProjectVersion = { specificVersion = null ->
    // 使用传入的特定版本
    if (useSpecificVersion && specificVersion) {
        return specificVersion
    }

    def buildVersionPropName = 'build.version'
    def buildVersionEnvName = 'BUILD__VERSION'
    def buildVersionFilePathPropName = 'build.versionFilePath'
    def buildVersionFilePathEnvName = 'BUILD__VERSION_FILE_PATH'
    def currentVersion = System.getProperty(buildVersionPropName)
        ?: System.getenv(buildVersionEnvName)
        ?: (System.getProperty(buildVersionFilePathPropName)
            ?: System.getenv(buildVersionFilePathEnvName)).with { path ->
                if (path) {
                    def versionFile = path as File
                    if (versionFile.exists()) {
                        logger.info '版本文件绝对路径为：{}', versionFile.absolutePath
                        versionFile.readLines().first()
                    }
                }
            }

    if (currentVersion) {
        currentVersion
    } else {
        throw new GradleException("必须指定构建版本（通过${buildVersionPropName}系统属性或${buildVersionEnvName}环境变量）或者用于记录构建版本的文件路径（通过${buildVersionFilePathPropName}系统属性或${buildVersionFilePathEnvName}环境变量）")
    }
}

if (useSpecificVersion) {
    version = ext.project_version
} else {
    version = getProjectVersion()
}
